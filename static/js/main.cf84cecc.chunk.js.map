{"version":3,"sources":["redux/reducers/songsReducer.js","constants/actionTypes.js","redux/store.js","redux/reducers/selectedSongReducer.js","components/SongDetail.js","components/SongList.js","redux/actions/song.js","components/App.js","reportWebVitals.js","index.js"],"names":["DEFAULT_SONGS","title","duration","SONG","store","createStore","combineReducers","songs","selectedSong","action","type","payload","connect","song","className","SongList","this","props","map","onClick","selectSong","_renderSongs","Component","actionCreators","App","style","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wJAAMA,EAAgB,CACpB,CAAEC,MAAO,UAAWC,SAAU,QAC9B,CAAED,MAAO,WAAYC,SAAU,QAC/B,CAAED,MAAO,gBAAiBC,SAAU,SCHzBC,EAEH,cCSKC,EAPDC,YACZC,YAAgB,CACdC,MFAwB,WAA+B,IAA9BA,EAA6B,uDAArBP,EACnC,OAAOO,GEALC,aCL+B,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMC,EAAW,uCAClE,OAAQA,EAAOC,MACb,KAAKP,EACH,OAAOM,EAAOE,QAChB,QACE,OAAOH,O,OCgBEI,eAFS,SAAC,GAAD,MAAuB,CAAEC,KAAzB,EAAGL,gBAEZI,EApBI,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpB,OAAKA,EAKH,qBAAKC,UAAU,UAAf,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAf,SAAyBD,EAAKZ,QAC9B,qBAAKa,UAAU,OAAf,SACE,uBAAMA,UAAU,OAAhB,uBAAkCD,EAAKX,cAEzC,qBAAKY,UAAU,cAAf,8BAVG,gC,8BCALC,E,gKACJ,WAAoB,IAAD,OACjB,OAAOC,KAAKC,MAAMV,MAAMW,KAAI,SAACL,GAAD,OAC1B,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,wBACEA,UAAU,oBACVK,QAAS,kBAAM,EAAKF,MAAMG,WAAWP,IAFvC,sBAOF,qBAAKC,UAAU,UAAf,SAA0BD,EAAKZ,UATNY,EAAKZ,Y,oBAcpC,WACE,OAAO,qBAAKa,UAAU,kBAAf,SAAkCE,KAAKK,mB,GAlB3BC,aAuBjBC,EAAiB,CAAEH,WC1BC,SAACP,GAAD,MAAW,CACnCH,KAAMP,EACNQ,QAASE,KD6BID,eAJS,SAAC,GACvB,MAAO,CAAEL,MAD0C,EAA1BA,MACTC,aADmC,EAAnBA,gBAIMe,EAAzBX,CAAyCG,GEfzCS,MAff,WACE,OACE,qBAAKV,UAAU,oBAAoBW,MAAO,CAAEC,QAAS,QAArD,SACE,sBAAKZ,UAAU,SAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,oBAAf,SACE,cAAC,EAAD,YCCKa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUlC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJmC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cf84cecc.chunk.js","sourcesContent":["const DEFAULT_SONGS = [\n  { title: \"Peaches\", duration: \"5:12\" },\n  { title: \"No srubs\", duration: \"4:05\" },\n  { title: \"Build a bitch\", duration: \"3:25\" },\n];\n\nexport const songsReducer = (songs = DEFAULT_SONGS, _) => {\n  return songs;\n};\n","export const SONG = {\n  CREATE: \"CREATE_SONG\",\n  SELECT: \"SELECT_SONG\",\n};\n","import { createStore, combineReducers } from \"redux\";\n\nimport * as reducers from \"./reducers\";\n\nconst store = createStore(\n  combineReducers({\n    songs: reducers.songsReducer,\n    selectedSong: reducers.selectedSongReducer,\n  })\n);\n\nexport default store;\n","import { SONG } from \"../../constants/actionTypes\";\n\nexport const selectedSongReducer = (selectedSong = null, action) => {\n  switch (action.type) {\n    case SONG.SELECT:\n      return action.payload;\n    default:\n      return selectedSong;\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst SongDetail = ({ song }) => {\n  if (!song) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"ui card\">\n      <div className=\"content\">\n        <div className=\"header\">{song.title}</div>\n        <div className=\"meta\">\n          <span className=\"date\">Duration: {song.duration}</span>\n        </div>\n        <div className=\"description\">Description</div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStoreToProps = ({ selectedSong }) => ({ song: selectedSong });\n\nexport default connect(mapStoreToProps)(SongDetail);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { selectSong } from \"../redux/actions\";\n\nclass SongList extends Component {\n  get _renderSongs() {\n    return this.props.songs.map((song) => (\n      <div className=\"item\" key={song.title}>\n        <div className=\"right floated content\">\n          <button\n            className=\"ui button primary\"\n            onClick={() => this.props.selectSong(song)}\n          >\n            Select\n          </button>\n        </div>\n        <div className=\"content\">{song.title}</div>\n      </div>\n    ));\n  }\n\n  render() {\n    return <div className=\"ui divided list\">{this._renderSongs}</div>;\n  }\n}\n\n// passed params to connect.\nconst actionCreators = { selectSong };\nconst mapStoreToProps = ({ songs, selectedSong }) => {\n  return { songs, selectedSong };\n};\n\nexport default connect(mapStoreToProps, actionCreators)(SongList);\n","import { SONG } from \"../../constants/actionTypes\";\n\nexport const selectSong = (song) => ({\n  type: SONG.SELECT,\n  payload: song,\n});\n","import SongDetail from \"./SongDetail\";\nimport SongList from \"./SongList\";\n\nfunction App() {\n  return (\n    <div className=\"ui container grid\" style={{ padding: \"30px\" }}>\n      <div className=\"ui row\">\n        <div className=\"column eight wide\">\n          <SongList />\n        </div>\n        <div className=\"column eight wide\">\n          <SongDetail />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}